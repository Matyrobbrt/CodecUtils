package com.matyrobbrt.codecutils.minecraft;

import com.google.gson.reflect.TypeToken;
import com.matyrobbrt.codecutils.api.CodecTypeAdapter;

public final class FoundCodecs {

	public static void apply(com.matyrobbrt.codecutils.api.CodecCreatorConfiguration configuration) {
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.featuresize.ThreeLayersFeatureSize.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.featuresize.ThreeLayersFeatureSize.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.item.ItemStack.class), CodecTypeAdapter.fromCodec(net.minecraft.world.item.ItemStack.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.client.telemetry.TelemetryEventType.class), CodecTypeAdapter.fromCodec(net.minecraft.client.telemetry.TelemetryEventType.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.Difficulty.class), CodecTypeAdapter.fromCodec(net.minecraft.world.Difficulty.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.core.GlobalPos.class), CodecTypeAdapter.fromCodec(net.minecraft.core.GlobalPos.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.GeodeBlockSettings.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.GeodeBlockSettings.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.configurations.GeodeConfiguration.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.configurations.GeodeConfiguration.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.entity.player.ProfilePublicKey.Data.class), CodecTypeAdapter.fromCodec(net.minecraft.world.entity.player.ProfilePublicKey.Data.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.client.telemetry.TelemetryEventInstance.class), CodecTypeAdapter.fromCodec(net.minecraft.client.telemetry.TelemetryEventInstance.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.WorldGenSettings.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.WorldGenSettings.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.WeightedPlacedFeature.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.WeightedPlacedFeature.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.structure.structures.WoodlandMansionStructure.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.structure.structures.WoodlandMansionStructure.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.client.telemetry.TelemetryProperty.ServerType.class), CodecTypeAdapter.fromCodec(net.minecraft.client.telemetry.TelemetryProperty.ServerType.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.configurations.OreConfiguration.TargetBlockState.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.configurations.OreConfiguration.TargetBlockState.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.gameevent.vibrations.VibrationSelector.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.gameevent.vibrations.VibrationSelector.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.network.chat.ChatTypeDecoration.Parameter.class), CodecTypeAdapter.fromCodec(net.minecraft.network.chat.ChatTypeDecoration.Parameter.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.foliageplacers.RandomSpreadFoliagePlacer.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.foliageplacers.RandomSpreadFoliagePlacer.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.biome.CheckerboardColumnBiomeSource.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.biome.CheckerboardColumnBiomeSource.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.GenerationStep.Carving.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.GenerationStep.Carving.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.configurations.RootSystemConfiguration.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.configurations.RootSystemConfiguration.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.WorldOptions.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.WorldOptions.CODEC.codec()));
		configuration.withAdapter(TypeToken.get(net.minecraft.core.particles.DustParticleOptions.class), CodecTypeAdapter.fromCodec(net.minecraft.core.particles.DustParticleOptions.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.block.state.BlockState.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.block.state.BlockState.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.placement.EnvironmentScanPlacement.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.placement.EnvironmentScanPlacement.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.trunkplacers.ForkingTrunkPlacer.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.trunkplacers.ForkingTrunkPlacer.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.SpawnData.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.SpawnData.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.treedecorators.TrunkVineDecorator.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.treedecorators.TrunkVineDecorator.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.DensityFunctions.Spline.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.DensityFunctions.Spline.CODEC.codec()));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.FlatLevelSource.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.FlatLevelSource.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.treedecorators.BeehiveDecorator.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.treedecorators.BeehiveDecorator.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.scores.criteria.ObjectiveCriteria.RenderType.class), CodecTypeAdapter.fromCodec(net.minecraft.world.scores.criteria.ObjectiveCriteria.RenderType.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.structure.templatesystem.ProcessorRule.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.structure.templatesystem.ProcessorRule.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.rootplacers.MangroveRootPlacer.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.rootplacers.MangroveRootPlacer.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.structure.structures.JungleTempleStructure.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.structure.structures.JungleTempleStructure.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.heightproviders.WeightedListHeight.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.heightproviders.WeightedListHeight.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.biome.MobSpawnSettings.MobSpawnCost.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.biome.MobSpawnSettings.MobSpawnCost.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.configurations.LargeDripstoneConfiguration.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.configurations.LargeDripstoneConfiguration.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.stateproviders.RotatedBlockProvider.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.stateproviders.RotatedBlockProvider.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.SurfaceRules.RuleSource.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.SurfaceRules.RuleSource.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.configurations.RandomPatchConfiguration.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.configurations.RandomPatchConfiguration.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.structure.StructureSpawnOverride.BoundingBoxType.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.structure.StructureSpawnOverride.BoundingBoxType.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.core.particles.ParticleOptions.class), CodecTypeAdapter.fromCodec(net.minecraft.core.particles.ParticleTypes.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.configurations.OreConfiguration.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.configurations.OreConfiguration.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.GenerationStep.Decoration.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.GenerationStep.Decoration.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.util.valueproviders.FloatProvider.class), CodecTypeAdapter.fromCodec(net.minecraft.util.valueproviders.FloatProvider.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.network.chat.LastSeenMessages.class), CodecTypeAdapter.fromCodec(net.minecraft.network.chat.LastSeenMessages.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.gameevent.BlockPositionSource.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.gameevent.BlockPositionSource.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.structure.pools.EmptyPoolElement.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.structure.pools.EmptyPoolElement.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.ChatFormatting.class), CodecTypeAdapter.fromCodec(net.minecraft.ChatFormatting.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.util.valueproviders.ClampedInt.class), CodecTypeAdapter.fromCodec(net.minecraft.util.valueproviders.ClampedInt.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.foliageplacers.DarkOakFoliagePlacer.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.foliageplacers.DarkOakFoliagePlacer.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.trunkplacers.UpwardsBranchingTrunkPlacer.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.trunkplacers.UpwardsBranchingTrunkPlacer.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.placement.RarityFilter.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.placement.RarityFilter.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.core.Direction.Axis.class), CodecTypeAdapter.fromCodec(net.minecraft.core.Direction.Axis.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.entity.monster.warden.WardenSpawnTracker.class), CodecTypeAdapter.fromCodec(net.minecraft.world.entity.monster.warden.WardenSpawnTracker.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.placement.CountPlacement.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.placement.CountPlacement.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.blockpredicates.WouldSurvivePredicate.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.blockpredicates.WouldSurvivePredicate.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.biome.AmbientAdditionsSettings.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.biome.AmbientAdditionsSettings.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.network.chat.SignedMessageLink.class), CodecTypeAdapter.fromCodec(net.minecraft.network.chat.SignedMessageLink.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.client.multiplayer.chat.LoggedChatEvent.class), CodecTypeAdapter.fromCodec(net.minecraft.client.multiplayer.chat.LoggedChatEvent.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.placement.CarvingMaskPlacement.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.placement.CarvingMaskPlacement.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.client.renderer.texture.atlas.sources.Unstitcher.class), CodecTypeAdapter.fromCodec(net.minecraft.client.renderer.texture.atlas.sources.Unstitcher.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.configurations.NetherForestVegetationConfig.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.configurations.NetherForestVegetationConfig.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.treedecorators.AlterGroundDecorator.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.treedecorators.AlterGroundDecorator.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.configurations.DiskConfiguration.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.configurations.DiskConfiguration.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.trunkplacers.MegaJungleTrunkPlacer.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.trunkplacers.MegaJungleTrunkPlacer.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.GeodeLayerSettings.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.GeodeLayerSettings.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.rootplacers.MangroveRootPlacement.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.rootplacers.MangroveRootPlacement.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.foliageplacers.MegaJungleFoliagePlacer.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.foliageplacers.MegaJungleFoliagePlacer.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.placement.CountOnEveryLayerPlacement.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.placement.CountOnEveryLayerPlacement.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.biome.BiomeSource.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.biome.BiomeSource.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.structure.templatesystem.AlwaysTrueTest.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.structure.templatesystem.AlwaysTrueTest.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.structure.templatesystem.TagMatchTest.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.structure.templatesystem.TagMatchTest.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.placement.PlacementModifier.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.placement.PlacementModifier.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.structure.placement.StructurePlacement.FrequencyReductionMethod.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.structure.placement.StructurePlacement.FrequencyReductionMethod.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.core.Direction.class), CodecTypeAdapter.fromCodec(net.minecraft.core.Direction.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.WorldDataConfiguration.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.WorldDataConfiguration.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.entity.npc.VillagerData.class), CodecTypeAdapter.fromCodec(net.minecraft.world.entity.npc.VillagerData.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.util.valueproviders.ClampedNormalInt.class), CodecTypeAdapter.fromCodec(net.minecraft.util.valueproviders.ClampedNormalInt.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.FossilFeatureConfiguration.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.FossilFeatureConfiguration.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.structure.structures.RuinedPortalStructure.Setup.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.structure.structures.RuinedPortalStructure.Setup.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.network.chat.FilterMask.class), CodecTypeAdapter.fromCodec(net.minecraft.network.chat.FilterMask.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.dimension.LevelStem.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.dimension.LevelStem.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.entity.animal.horse.Variant.class), CodecTypeAdapter.fromCodec(net.minecraft.world.entity.animal.horse.Variant.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.util.valueproviders.ClampedNormalFloat.class), CodecTypeAdapter.fromCodec(net.minecraft.util.valueproviders.ClampedNormalFloat.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.configurations.UnderwaterMagmaConfiguration.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.configurations.UnderwaterMagmaConfiguration.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.stateproviders.WeightedStateProvider.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.stateproviders.WeightedStateProvider.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.entity.animal.axolotl.Axolotl.Variant.class), CodecTypeAdapter.fromCodec(net.minecraft.world.entity.animal.axolotl.Axolotl.Variant.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.biome.BiomeSpecialEffects.GrassColorModifier.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.biome.BiomeSpecialEffects.GrassColorModifier.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.structure.Structure.StructureSettings.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.structure.Structure.StructureSettings.CODEC.codec()));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.configurations.RandomFeatureConfiguration.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.configurations.RandomFeatureConfiguration.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.configurations.SculkPatchConfiguration.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.configurations.SculkPatchConfiguration.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.treedecorators.TreeDecorator.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.treedecorators.TreeDecorator.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.stateproviders.RuleBasedBlockStateProvider.Rule.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.stateproviders.RuleBasedBlockStateProvider.Rule.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.client.multiplayer.chat.LoggedChatMessage.System.class), CodecTypeAdapter.fromCodec(net.minecraft.client.multiplayer.chat.LoggedChatMessage.System.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.configurations.ProbabilityFeatureConfiguration.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.configurations.ProbabilityFeatureConfiguration.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.biome.TheEndBiomeSource.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.biome.TheEndBiomeSource.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.heightproviders.TrapezoidHeight.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.heightproviders.TrapezoidHeight.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.item.Instrument.class), CodecTypeAdapter.fromCodec(net.minecraft.world.item.Instrument.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.sounds.Music.class), CodecTypeAdapter.fromCodec(net.minecraft.sounds.Music.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.structure.placement.StructurePlacement.ExclusionZone.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.structure.placement.StructurePlacement.ExclusionZone.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.structure.templatesystem.AxisAlignedLinearPosTest.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.structure.templatesystem.AxisAlignedLinearPosTest.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.configurations.EndGatewayConfiguration.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.configurations.EndGatewayConfiguration.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.synth.BlendedNoise.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.synth.BlendedNoise.CODEC.codec()));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.biome.MobSpawnSettings.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.biome.MobSpawnSettings.CODEC.codec()));
		configuration.withAdapter(TypeToken.get(net.minecraft.core.BlockPos.class), CodecTypeAdapter.fromCodec(net.minecraft.core.BlockPos.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.DataPackConfig.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.DataPackConfig.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.structure.structures.OceanRuinStructure.Type.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.structure.structures.OceanRuinStructure.Type.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.biome.AmbientParticleSettings.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.biome.AmbientParticleSettings.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.structure.placement.ConcentricRingsStructurePlacement.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.structure.placement.ConcentricRingsStructurePlacement.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.blockpredicates.HasSturdyFacePredicate.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.blockpredicates.HasSturdyFacePredicate.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.tags.TagEntry.class), CodecTypeAdapter.fromCodec(net.minecraft.tags.TagEntry.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.structure.pools.ListPoolElement.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.structure.pools.ListPoolElement.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.structure.structures.StrongholdStructure.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.structure.structures.StrongholdStructure.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.item.DyeColor.class), CodecTypeAdapter.fromCodec(net.minecraft.world.item.DyeColor.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.biome.Climate.Parameter.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.biome.Climate.Parameter.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.structure.templatesystem.BlockAgeProcessor.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.structure.templatesystem.BlockAgeProcessor.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.structure.templatesystem.RandomBlockMatchTest.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.structure.templatesystem.RandomBlockMatchTest.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.treedecorators.AttachedToLeavesDecorator.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.treedecorators.AttachedToLeavesDecorator.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.gameevent.EntityPositionSource.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.gameevent.EntityPositionSource.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.placement.SurfaceWaterDepthFilter.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.placement.SurfaceWaterDepthFilter.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.configurations.ReplaceSphereConfiguration.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.configurations.ReplaceSphereConfiguration.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.dimension.DimensionType.MonsterSettings.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.dimension.DimensionType.MonsterSettings.CODEC.codec()));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.DensityFunction.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.DensityFunctions.BeardifierOrMarker.CODEC.codec()));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.structure.placement.RandomSpreadStructurePlacement.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.structure.placement.RandomSpreadStructurePlacement.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.treedecorators.LeaveVineDecorator.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.treedecorators.LeaveVineDecorator.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.placement.SurfaceRelativeThresholdFilter.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.placement.SurfaceRelativeThresholdFilter.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.DensityFunction.NoiseHolder.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.DensityFunction.NoiseHolder.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.placement.CaveSurface.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.placement.CaveSurface.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.structure.templatesystem.RuleProcessor.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.structure.templatesystem.RuleProcessor.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.core.particles.ShriekParticleOption.class), CodecTypeAdapter.fromCodec(net.minecraft.core.particles.ShriekParticleOption.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.flat.FlatLayerInfo.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.flat.FlatLayerInfo.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.entity.animal.horse.Llama.Variant.class), CodecTypeAdapter.fromCodec(net.minecraft.world.entity.animal.horse.Llama.Variant.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.structure.templatesystem.NopProcessor.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.structure.templatesystem.NopProcessor.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.stateproviders.BlockStateProvider.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.stateproviders.BlockStateProvider.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.configurations.BlockColumnConfiguration.Layer.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.configurations.BlockColumnConfiguration.Layer.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.util.ResourceLocationPattern.class), CodecTypeAdapter.fromCodec(net.minecraft.util.ResourceLocationPattern.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.structure.BoundingBox.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.structure.BoundingBox.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.structure.structures.MineshaftStructure.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.structure.structures.MineshaftStructure.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.client.renderer.texture.atlas.sources.DirectoryLister.class), CodecTypeAdapter.fromCodec(net.minecraft.client.renderer.texture.atlas.sources.DirectoryLister.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.featuresize.FeatureSize.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.featuresize.FeatureSize.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.flat.FlatLevelGeneratorSettings.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.flat.FlatLevelGeneratorSettings.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.util.valueproviders.ConstantInt.class), CodecTypeAdapter.fromCodec(net.minecraft.util.valueproviders.ConstantInt.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.blockpredicates.SolidPredicate.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.blockpredicates.SolidPredicate.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.configurations.HugeMushroomFeatureConfiguration.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.configurations.HugeMushroomFeatureConfiguration.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.VerticalAnchor.BelowTop.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.VerticalAnchor.BelowTop.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.structure.pools.LegacySinglePoolElement.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.structure.pools.LegacySinglePoolElement.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.blending.BlendingData.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.blending.BlendingData.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.blockpredicates.MatchingBlockTagPredicate.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.blockpredicates.MatchingBlockTagPredicate.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.resources.ResourceLocation.class), CodecTypeAdapter.fromCodec(net.minecraft.resources.ResourceLocation.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.foliageplacers.SpruceFoliagePlacer.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.foliageplacers.SpruceFoliagePlacer.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.foliageplacers.PineFoliagePlacer.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.foliageplacers.PineFoliagePlacer.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.SpikeFeature.EndSpike.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.SpikeFeature.EndSpike.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.BelowZeroRetrogen.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.BelowZeroRetrogen.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.configurations.BlockColumnConfiguration.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.configurations.BlockColumnConfiguration.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.DensityFunctions.Spline.Coordinate.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.DensityFunctions.Spline.Coordinate.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.configurations.VegetationPatchConfiguration.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.configurations.VegetationPatchConfiguration.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.client.renderer.texture.atlas.SpriteSource.class), CodecTypeAdapter.fromCodec(net.minecraft.client.renderer.texture.atlas.SpriteSources.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.configurations.NoneFeatureConfiguration.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.configurations.NoneFeatureConfiguration.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.VerticalAnchor.AboveBottom.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.VerticalAnchor.AboveBottom.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.network.chat.TextColor.class), CodecTypeAdapter.fromCodec(net.minecraft.network.chat.TextColor.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.structure.structures.ShipwreckStructure.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.structure.structures.ShipwreckStructure.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.Heightmap.Types.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.Heightmap.Types.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.GeodeCrackSettings.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.GeodeCrackSettings.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.util.valueproviders.UniformInt.class), CodecTypeAdapter.fromCodec(net.minecraft.util.valueproviders.UniformInt.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.flag.FeatureFlagSet.class), CodecTypeAdapter.fromCodec(net.minecraft.world.flag.FeatureFlags.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.structure.placement.RandomSpreadType.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.structure.placement.RandomSpreadType.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.placement.HeightmapPlacement.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.placement.HeightmapPlacement.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.structure.structures.JigsawStructure.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.structure.structures.JigsawStructure.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.structure.structures.BuriedTreasureStructure.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.structure.structures.BuriedTreasureStructure.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.structure.templatesystem.BlockIgnoreProcessor.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.structure.templatesystem.BlockIgnoreProcessor.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.network.chat.ChatTypeDecoration.class), CodecTypeAdapter.fromCodec(net.minecraft.network.chat.ChatTypeDecoration.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.structure.templatesystem.ProtectedBlockProcessor.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.structure.templatesystem.ProtectedBlockProcessor.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.util.valueproviders.IntProvider.class), CodecTypeAdapter.fromCodec(net.minecraft.util.valueproviders.IntProvider.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.biome.Biome.Precipitation.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.biome.Biome.Precipitation.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.gameevent.vibrations.VibrationInfo.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.gameevent.vibrations.VibrationInfo.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.core.particles.VibrationParticleOption.class), CodecTypeAdapter.fromCodec(net.minecraft.core.particles.VibrationParticleOption.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.configurations.LayerConfiguration.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.configurations.LayerConfiguration.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.structure.templatesystem.BlockStateMatchTest.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.structure.templatesystem.BlockStateMatchTest.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.util.valueproviders.ConstantFloat.class), CodecTypeAdapter.fromCodec(net.minecraft.util.valueproviders.ConstantFloat.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.configurations.DripstoneClusterConfiguration.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.configurations.DripstoneClusterConfiguration.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.structure.structures.EndCityStructure.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.structure.structures.EndCityStructure.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.foliageplacers.BlobFoliagePlacer.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.foliageplacers.BlobFoliagePlacer.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.structure.templatesystem.LavaSubmergedBlockProcessor.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.structure.templatesystem.LavaSubmergedBlockProcessor.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.structure.templatesystem.LinearPosTest.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.structure.templatesystem.LinearPosTest.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.entity.player.ProfileKeyPair.class), CodecTypeAdapter.fromCodec(net.minecraft.world.entity.player.ProfileKeyPair.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.configurations.ReplaceBlockConfiguration.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.configurations.ReplaceBlockConfiguration.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.SpawnData.CustomSpawnRules.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.SpawnData.CustomSpawnRules.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.structure.structures.RuinedPortalPiece.VerticalPlacement.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.structure.structures.RuinedPortalPiece.VerticalPlacement.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.heightproviders.BiasedToBottomHeight.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.heightproviders.BiasedToBottomHeight.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.structure.structures.NetherFortressStructure.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.structure.structures.NetherFortressStructure.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.structure.structures.IglooStructure.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.structure.structures.IglooStructure.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.client.renderer.texture.atlas.sources.SingleFile.class), CodecTypeAdapter.fromCodec(net.minecraft.client.renderer.texture.atlas.sources.SingleFile.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.foliageplacers.FancyFoliagePlacer.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.foliageplacers.FancyFoliagePlacer.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.placement.NoiseBasedCountPlacement.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.placement.NoiseBasedCountPlacement.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.structure.templatesystem.PosAlwaysTrueTest.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.structure.templatesystem.PosAlwaysTrueTest.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.trunkplacers.BendingTrunkPlacer.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.trunkplacers.BendingTrunkPlacer.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.util.valueproviders.BiasedToBottomInt.class), CodecTypeAdapter.fromCodec(net.minecraft.util.valueproviders.BiasedToBottomInt.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.placement.NoiseThresholdCountPlacement.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.placement.NoiseThresholdCountPlacement.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.configurations.RandomBooleanFeatureConfiguration.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.configurations.RandomBooleanFeatureConfiguration.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.util.valueproviders.WeightedListInt.class), CodecTypeAdapter.fromCodec(net.minecraft.util.valueproviders.WeightedListInt.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.network.chat.ChatType.class), CodecTypeAdapter.fromCodec(net.minecraft.network.chat.ChatType.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.trunkplacers.DarkOakTrunkPlacer.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.trunkplacers.DarkOakTrunkPlacer.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.heightproviders.ConstantHeight.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.heightproviders.ConstantHeight.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.trunkplacers.FancyTrunkPlacer.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.trunkplacers.FancyTrunkPlacer.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.structure.structures.OceanMonumentStructure.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.structure.structures.OceanMonumentStructure.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.stateproviders.RandomizedIntStateProvider.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.stateproviders.RandomizedIntStateProvider.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.effect.MobEffectInstance.FactorData.class), CodecTypeAdapter.fromCodec(net.minecraft.world.effect.MobEffectInstance.FactorData.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.structure.structures.NetherFossilStructure.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.structure.structures.NetherFossilStructure.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.util.valueproviders.TrapezoidFloat.class), CodecTypeAdapter.fromCodec(net.minecraft.util.valueproviders.TrapezoidFloat.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.structure.templatesystem.JigsawReplacementProcessor.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.structure.templatesystem.JigsawReplacementProcessor.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.placement.InSquarePlacement.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.placement.InSquarePlacement.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.placement.BiomeFilter.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.placement.BiomeFilter.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.NoiseRouter.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.NoiseRouter.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.gameevent.PositionSource.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.gameevent.PositionSource.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.VerticalAnchor.Absolute.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.VerticalAnchor.Absolute.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.network.chat.MessageSignature.class), CodecTypeAdapter.fromCodec(net.minecraft.network.chat.MessageSignature.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.structure.structures.RuinedPortalPiece.Properties.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.structure.structures.RuinedPortalPiece.Properties.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.heightproviders.HeightProvider.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.heightproviders.HeightProvider.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.client.telemetry.TelemetryProperty.GameMode.class), CodecTypeAdapter.fromCodec(net.minecraft.client.telemetry.TelemetryProperty.GameMode.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.item.crafting.CraftingBookCategory.class), CodecTypeAdapter.fromCodec(net.minecraft.world.item.crafting.CraftingBookCategory.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.placement.HeightRangePlacement.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.placement.HeightRangePlacement.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.carver.CarverConfiguration.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.carver.CarverConfiguration.CODEC.codec()));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.structure.pools.FeaturePoolElement.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.structure.pools.FeaturePoolElement.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.trunkplacers.StraightTrunkPlacer.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.trunkplacers.StraightTrunkPlacer.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.util.random.Weight.class), CodecTypeAdapter.fromCodec(net.minecraft.util.random.Weight.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.core.particles.DustColorTransitionOptions.class), CodecTypeAdapter.fromCodec(net.minecraft.core.particles.DustColorTransitionOptions.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.block.Mirror.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.block.Mirror.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.configurations.SimpleRandomFeatureConfiguration.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.configurations.SimpleRandomFeatureConfiguration.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.structure.structures.DesertPyramidStructure.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.structure.structures.DesertPyramidStructure.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.biome.FixedBiomeSource.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.biome.FixedBiomeSource.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.biome.AmbientMoodSettings.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.biome.AmbientMoodSettings.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.stateproviders.NoiseThresholdProvider.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.stateproviders.NoiseThresholdProvider.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.treedecorators.CocoaDecorator.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.treedecorators.CocoaDecorator.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.stateproviders.DualNoiseProvider.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.stateproviders.DualNoiseProvider.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.structure.StructureSpawnOverride.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.structure.StructureSpawnOverride.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.structure.templatesystem.BlackstoneReplaceProcessor.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.structure.templatesystem.BlackstoneReplaceProcessor.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.entity.animal.Panda.Gene.class), CodecTypeAdapter.fromCodec(net.minecraft.world.entity.animal.Panda.Gene.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.client.multiplayer.chat.ChatTrustLevel.class), CodecTypeAdapter.fromCodec(net.minecraft.client.multiplayer.chat.ChatTrustLevel.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.client.multiplayer.chat.LoggedChatMessage.Player.class), CodecTypeAdapter.fromCodec(net.minecraft.client.multiplayer.chat.LoggedChatMessage.Player.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.biome.MobSpawnSettings.SpawnerData.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.biome.MobSpawnSettings.SpawnerData.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.configurations.SpikeConfiguration.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.configurations.SpikeConfiguration.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.heightproviders.UniformHeight.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.heightproviders.UniformHeight.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.carver.CanyonCarverConfiguration.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.carver.CanyonCarverConfiguration.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.rootplacers.RootPlacer.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.rootplacers.RootPlacer.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.trunkplacers.TrunkPlacer.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.trunkplacers.TrunkPlacer.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.foliageplacers.FoliagePlacer.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.foliageplacers.FoliagePlacer.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.GameType.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.GameType.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.foliageplacers.AcaciaFoliagePlacer.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.foliageplacers.AcaciaFoliagePlacer.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.NoiseSettings.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.NoiseSettings.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.biome.BiomeSpecialEffects.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.biome.BiomeSpecialEffects.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.structure.structures.MineshaftStructure.Type.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.structure.structures.MineshaftStructure.Type.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.structure.pools.StructurePoolElement.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.structure.pools.StructurePoolElement.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.entity.animal.Rabbit.Variant.class), CodecTypeAdapter.fromCodec(net.minecraft.world.entity.animal.Rabbit.Variant.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.configurations.TwistingVinesConfig.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.configurations.TwistingVinesConfig.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.item.crafting.CookingBookCategory.class), CodecTypeAdapter.fromCodec(net.minecraft.world.item.crafting.CookingBookCategory.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.WorldDimensions.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.WorldDimensions.CODEC.codec()));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.blockpredicates.InsideWorldBoundsPredicate.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.blockpredicates.InsideWorldBoundsPredicate.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.placement.BlockPredicateFilter.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.placement.BlockPredicateFilter.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.structure.structures.RuinedPortalStructure.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.structure.structures.RuinedPortalStructure.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.client.renderer.texture.atlas.sources.SourceFilter.class), CodecTypeAdapter.fromCodec(net.minecraft.client.renderer.texture.atlas.sources.SourceFilter.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.util.valueproviders.UniformFloat.class), CodecTypeAdapter.fromCodec(net.minecraft.util.valueproviders.UniformFloat.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.block.Rotation.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.block.Rotation.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.biome.Climate.ParameterPoint.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.biome.Climate.ParameterPoint.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.entity.animal.TropicalFish.Pattern.class), CodecTypeAdapter.fromCodec(net.minecraft.world.entity.animal.TropicalFish.Pattern.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.LakeFeature.Configuration.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.LakeFeature.Configuration.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.HugeFungusConfiguration.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.HugeFungusConfiguration.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.configurations.SpringConfiguration.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.configurations.SpringConfiguration.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.core.particles.SculkChargeParticleOptions.class), CodecTypeAdapter.fromCodec(net.minecraft.core.particles.SculkChargeParticleOptions.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.material.FluidState.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.material.FluidState.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.carver.CarverDebugSettings.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.carver.CarverDebugSettings.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.configurations.TreeConfiguration.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.configurations.TreeConfiguration.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.configurations.SimpleBlockConfiguration.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.configurations.SimpleBlockConfiguration.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.structure.structures.SwampHutStructure.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.structure.structures.SwampHutStructure.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.stateproviders.SimpleStateProvider.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.stateproviders.SimpleStateProvider.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.tags.TagFile.class), CodecTypeAdapter.fromCodec(net.minecraft.tags.TagFile.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.entity.animal.Fox.Type.class), CodecTypeAdapter.fromCodec(net.minecraft.world.entity.animal.Fox.Type.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.structure.StructureSet.StructureSelectionEntry.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.structure.StructureSet.StructureSelectionEntry.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.configurations.PointedDripstoneConfiguration.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.configurations.PointedDripstoneConfiguration.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.placement.RandomOffsetPlacement.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.placement.RandomOffsetPlacement.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.DebugLevelSource.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.DebugLevelSource.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.heightproviders.VeryBiasedToBottomHeight.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.heightproviders.VeryBiasedToBottomHeight.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.structure.templatesystem.GravityProcessor.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.structure.templatesystem.GravityProcessor.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.entity.animal.Parrot.Variant.class), CodecTypeAdapter.fromCodec(net.minecraft.world.entity.animal.Parrot.Variant.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.VerticalAnchor.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.VerticalAnchor.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.structure.templatesystem.RandomBlockStateMatchTest.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.structure.templatesystem.RandomBlockStateMatchTest.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.NoiseBasedChunkGenerator.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.NoiseBasedChunkGenerator.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.structure.placement.StructurePlacement.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.structure.placement.StructurePlacement.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.structure.templatesystem.PosRuleTest.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.structure.templatesystem.PosRuleTest.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.biome.BiomeGenerationSettings.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.biome.BiomeGenerationSettings.CODEC.codec()));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.stateproviders.NoiseProvider.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.stateproviders.NoiseProvider.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.core.Vec3i.class), CodecTypeAdapter.fromCodec(net.minecraft.core.Vec3i.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.entity.animal.MushroomCow.MushroomType.class), CodecTypeAdapter.fromCodec(net.minecraft.world.entity.animal.MushroomCow.MushroomType.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.biome.Biome.TemperatureModifier.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.biome.Biome.TemperatureModifier.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.structure.pools.SinglePoolElement.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.structure.pools.SinglePoolElement.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.block.SculkSpreader.ChargeCursor.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.block.SculkSpreader.ChargeCursor.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.entity.ai.gossip.GossipType.class), CodecTypeAdapter.fromCodec(net.minecraft.world.entity.ai.gossip.GossipType.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.stateproviders.RuleBasedBlockStateProvider.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.stateproviders.RuleBasedBlockStateProvider.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.configurations.BlockPileConfiguration.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.configurations.BlockPileConfiguration.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.chunk.ChunkGenerator.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.chunk.ChunkGenerator.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.configurations.CountConfiguration.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.configurations.CountConfiguration.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.nbt.CompoundTag.class), CodecTypeAdapter.fromCodec(net.minecraft.nbt.CompoundTag.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.rootplacers.AboveRootPlacement.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.rootplacers.AboveRootPlacement.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.configurations.ColumnFeatureConfiguration.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.configurations.ColumnFeatureConfiguration.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.entity.MobCategory.class), CodecTypeAdapter.fromCodec(net.minecraft.world.entity.MobCategory.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.configurations.BlockStateConfiguration.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.configurations.BlockStateConfiguration.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.biome.MultiNoiseBiomeSource.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.biome.MultiNoiseBiomeSource.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.configurations.MultifaceGrowthConfiguration.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.configurations.MultifaceGrowthConfiguration.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.SurfaceRules.ConditionSource.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.SurfaceRules.ConditionSource.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.featuresize.TwoLayersFeatureSize.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.featuresize.TwoLayersFeatureSize.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.structure.templatesystem.BlockRotProcessor.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.structure.templatesystem.BlockRotProcessor.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.carver.CaveCarverConfiguration.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.carver.CaveCarverConfiguration.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.foliageplacers.BushFoliagePlacer.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.foliageplacers.BushFoliagePlacer.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.carver.CanyonCarverConfiguration.CanyonShapeConfiguration.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.carver.CanyonCarverConfiguration.CanyonShapeConfiguration.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.trunkplacers.GiantTrunkPlacer.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.trunkplacers.GiantTrunkPlacer.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.structure.templatesystem.BlockMatchTest.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.structure.templatesystem.BlockMatchTest.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.structure.templatesystem.RuleTest.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.structure.templatesystem.RuleTest.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.foliageplacers.MegaPineFoliagePlacer.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.foliageplacers.MegaPineFoliagePlacer.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.structure.TerrainAdjustment.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.structure.TerrainAdjustment.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.structure.pools.StructureTemplatePool.Projection.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.structure.pools.StructureTemplatePool.Projection.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.entity.vehicle.Boat.Type.class), CodecTypeAdapter.fromCodec(net.minecraft.world.entity.vehicle.Boat.Type.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.phys.Vec3.class), CodecTypeAdapter.fromCodec(net.minecraft.world.phys.Vec3.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.feature.configurations.DeltaFeatureConfiguration.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.feature.configurations.DeltaFeatureConfiguration.CODEC));
		configuration.withAdapter(TypeToken.get(net.minecraft.world.level.levelgen.structure.structures.OceanRuinStructure.class), CodecTypeAdapter.fromCodec(net.minecraft.world.level.levelgen.structure.structures.OceanRuinStructure.CODEC));
	}
}